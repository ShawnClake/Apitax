# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from apitax.ah.api.models.base_model_ import Model
from apitax.ah.api import util


class ErrorResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, status=None, message=None, state=None):  # noqa: E501
        """ErrorResponse - a model defined in Swagger

        :param status: The status of this ErrorResponse.  # noqa: E501
        :type status: int
        :param message: The message of this ErrorResponse.  # noqa: E501
        :type message: str
        :param state: The state of this ErrorResponse.  # noqa: E501
        :type state: str
        """
        self.swagger_types = {
            'status': int,
            'message': str,
            'state': str
        }

        self.attribute_map = {
            'status': 'status',
            'message': 'message',
            'state': 'state'
        }

        self._status = status
        self._message = message
        self._state = state

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorResponse of this ErrorResponse.  # noqa: E501
        :rtype: ErrorResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ErrorResponse.


        :return: The status of this ErrorResponse.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ErrorResponse.


        :param status: The status of this ErrorResponse.
        :type status: int
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def message(self):
        """Gets the message of this ErrorResponse.


        :return: The message of this ErrorResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ErrorResponse.


        :param message: The message of this ErrorResponse.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def state(self):
        """Gets the state of this ErrorResponse.


        :return: The state of this ErrorResponse.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ErrorResponse.


        :param state: The state of this ErrorResponse.
        :type state: str
        """

        self._state = state
