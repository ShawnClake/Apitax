# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from apitax.ah.api.models.base_model_ import Model
from apitax.ah.api.models.script import Script  # noqa: F401,E501
from apitax.ah.api import util


class Rename(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, original=None, new=None):  # noqa: E501
        """Rename - a model defined in Swagger

        :param original: The original of this Rename.  # noqa: E501
        :type original: Script
        :param new: The new of this Rename.  # noqa: E501
        :type new: Script
        """
        self.swagger_types = {
            'original': Script,
            'new': Script
        }

        self.attribute_map = {
            'original': 'original',
            'new': 'new'
        }

        self._original = original
        self._new = new

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The rename of this Rename.  # noqa: E501
        :rtype: Rename
        """
        return util.deserialize_model(dikt, cls)

    @property
    def original(self):
        """Gets the original of this Rename.


        :return: The original of this Rename.
        :rtype: Script
        """
        return self._original

    @original.setter
    def original(self, original):
        """Sets the original of this Rename.


        :param original: The original of this Rename.
        :type original: Script
        """
        if original is None:
            raise ValueError("Invalid value for `original`, must not be `None`")  # noqa: E501

        self._original = original

    @property
    def new(self):
        """Gets the new of this Rename.


        :return: The new of this Rename.
        :rtype: Script
        """
        return self._new

    @new.setter
    def new(self, new):
        """Sets the new of this Rename.


        :param new: The new of this Rename.
        :type new: Script
        """
        if new is None:
            raise ValueError("Invalid value for `new`, must not be `None`")  # noqa: E501

        self._new = new
