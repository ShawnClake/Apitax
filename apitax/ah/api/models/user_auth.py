# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from apitax.ah.api.models.base_model_ import Model
from apitax.ah.api import util


class UserAuth(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, username=None, password=None, api_token=None, extra=None):  # noqa: E501
        """UserAuth - a model defined in Swagger

        :param username: The username of this UserAuth.  # noqa: E501
        :type username: str
        :param password: The password of this UserAuth.  # noqa: E501
        :type password: str
        :param api_token: The api_token of this UserAuth.  # noqa: E501
        :type api_token: str
        :param extra: The extra of this UserAuth.  # noqa: E501
        :type extra: object
        """
        self.swagger_types = {
            'username': str,
            'password': str,
            'api_token': str,
            'extra': object
        }

        self.attribute_map = {
            'username': 'username',
            'password': 'password',
            'api_token': 'api_token',
            'extra': 'extra'
        }

        self._username = username
        self._password = password
        self._api_token = api_token
        self._extra = extra

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserAuth of this UserAuth.  # noqa: E501
        :rtype: UserAuth
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self):
        """Gets the username of this UserAuth.


        :return: The username of this UserAuth.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserAuth.


        :param username: The username of this UserAuth.
        :type username: str
        """

        self._username = username

    @property
    def password(self):
        """Gets the password of this UserAuth.


        :return: The password of this UserAuth.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this UserAuth.


        :param password: The password of this UserAuth.
        :type password: str
        """

        self._password = password

    @property
    def api_token(self):
        """Gets the api_token of this UserAuth.


        :return: The api_token of this UserAuth.
        :rtype: str
        """
        return self._api_token

    @api_token.setter
    def api_token(self, api_token):
        """Sets the api_token of this UserAuth.


        :param api_token: The api_token of this UserAuth.
        :type api_token: str
        """

        self._api_token = api_token

    @property
    def extra(self):
        """Gets the extra of this UserAuth.


        :return: The extra of this UserAuth.
        :rtype: object
        """
        return self._extra

    @extra.setter
    def extra(self, extra):
        """Sets the extra of this UserAuth.


        :param extra: The extra of this UserAuth.
        :type extra: object
        """

        self._extra = extra
